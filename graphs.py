# -*- coding: utf-8 -*-
"""Graphs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mnc5DG4DQpYJAgeTl-Bs5I1mmOexJqU9
"""

import warnings
warnings.filterwarnings('ignore')

#get the data from
!wget https://www.dropbox.com/scl/fi/eatgdc8s9wrf34vma3fu1/researchData.csv?rlkey=qggut7vrftqjzy3d7chqlkgpr&dl=0

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder

data = pd.read_csv('/content/researchData.csv?rlkey=qggut7vrftqjzy3d7chqlkgpr')

data_encoded = pd.get_dummies(data, columns=['REASON OF THE ACCIDENT', 'TIME PERIOD OF ACCIDENT'])

age_range_mapping = {'Young': 0, 'Adult': 1, 'Old': 2}
data['AGE RANGE'] = data['AGE RANGE'].map(age_range_mapping)

X = data.drop('NATURE OF INJURIES', axis=1)
y = data['AGE RANGE']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(random_state=42)

for col in X.columns:
    if X[col].dtype == 'object':
        # Convert categorical features to numeric using one-hot encoding
        X = pd.get_dummies(X, columns=[col], drop_first=True)

# model.fit(X_train, y_train)
gender_mapping = {'Male': 0, 'Female': 1}
data['GENDER'] = data['GENDER'].map(gender_mapping)

data_encoded = pd.get_dummies(data, columns=['GENDER'])

data

from matplotlib import pyplot as plt
import seaborn as sns
data.groupby('NATURE OF INJURIES').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

from matplotlib import pyplot as plt
import seaborn as sns
import pandas as pd
plt.subplots(figsize=(8, 8))
df_2dhist = pd.DataFrame({
    x_label: grp['TIME PERIOD OF ACCIDENT'].value_counts()
    for x_label, grp in data.groupby('AGE RANGE')
})
sns.heatmap(df_2dhist, cmap='viridis')
plt.xlabel('AGE RANGE')
_ = plt.ylabel('TIME PERIOD OF ACCIDENT')

